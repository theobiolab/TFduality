(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      4153,        115]
NotebookOptionsPosition[      3862,        102]
NotebookOutlinePosition[      4201,        117]
CellTagsIndexPosition[      4158,        114]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", "\"\<tocheck_P4P7P8.in\>\""}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", "$CommandLine", "]"}], ";", "\n", 
    RowBox[{"init", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"$CommandLine", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"file", " ", "=", " ", 
   RowBox[{"OpenRead", "[", "f", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"line", " ", "=", " ", 
   RowBox[{"ReadLine", "[", "file", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{"init", "=", "710"}], "\n", 
 RowBox[{"final", "=", "710"}], "\n", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"SameQ", "[", 
      RowBox[{"line", ",", " ", "EndOfFile"}], "]"}], "]"}], " ", "&&", " ", 
    RowBox[{"i", " ", "<=", " ", "final"}]}], ",", "\n", " ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", ">=", " ", "init"}], " ", "&&", " ", 
       RowBox[{"i", " ", "<=", " ", "final"}]}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"WriteString", "[", 
        RowBox[{"\"\<stdout\>\"", ",", " ", "i", ",", " ", "\"\<;\>\""}], 
        "]"}], ";", "\n", "  ", 
       RowBox[{"coefexpr", " ", "=", " ", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"line", ",", " ", "\"\<;\>\""}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"expr", " ", "=", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"coefexpr", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"out1", " ", "=", " ", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"assum", " ", "=", " ", 
            RowBox[{
             RowBox[{"alpha", " ", ">", " ", "1"}], " ", "&&", " ", 
             RowBox[{"0", " ", "<", " ", "beta", " ", "<", " ", "1"}], " ", "&&",
              " ", 
             RowBox[{"0", " ", "<", " ", "omega", " ", "<", " ", "1"}], " ", "&&",
              " ", 
             RowBox[{"0", " ", "<", " ", "gamma", " ", "<=", " ", "1"}]}]}], 
           "}"}], ",", " ", "\n", "    ", 
          RowBox[{"TimeConstrained", "[", 
           RowBox[{
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"Reduce", "[", 
               RowBox[{
                RowBox[{"assum", " ", "\[Implies]", " ", 
                 RowBox[{"expr", " ", ">=", " ", "0"}]}], ",", " ", "Reals"}],
                "]"}], ",", " ", "assum"}], "]"}], ",", " ", "timec"}], 
           "]"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"WriteString", "[", 
        RowBox[{"outf", ",", " ", "out1", ",", " ", "\"\<\\n\>\""}], "]"}], 
       ";"}], "\n", "  ", ",", " ", "1"}], "]"}], ";", "\n", " ", 
    RowBox[{"line", " ", "=", " ", 
     RowBox[{"ReadLine", "[", "file", "]"}]}], ";", "\n", " ", 
    RowBox[{"i", " ", "=", " ", 
     RowBox[{"i", " ", "+", " ", "1"}]}], ";"}]}], "\n", " ", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Close", "[", "file", "]"}], ";"}], "\n", "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.829385741423271*^9, 3.829385757263606*^9}, {
  3.829387188174177*^9, 
  3.829387200299465*^9}},ExpressionUUID->"f735bdc9-324d-4314-acd7-\
7172a8a47246"]
},
WindowSize->{808, 911},
WindowMargins->{{62, Automatic}, {Automatic, -154}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3300, 80, 490, "Code",ExpressionUUID->"f735bdc9-324d-4314-acd7-7172a8a47246"]
}
]
*)

